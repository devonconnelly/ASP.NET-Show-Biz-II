@model DC2247A5.Models.EpisodeAddFormViewModel

@{
    ViewBag.Title = "Add Episode To";
}

<h2>@ViewBag.Title @Model.ShowName</h2>


@using (Html.BeginForm("AddEpisode", "Shows", FormMethod.Post, new { enctype = "multipart/form-data" } ))
{
    @Html.AntiForgeryToken()

<div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row mb-3">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.SeasonNumber, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.SeasonNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SeasonNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.EpisodeNumber, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.EpisodeNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EpisodeNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.AirDate, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.AirDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.AirDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Genre, Model.Genres, new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Premise, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Premise, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Premise, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.VideoUpload, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.VideoUpload, new { htmlAttributes = new { @class = "form-control", type = "file" } })
            @Html.ValidationMessageFor(model => model.VideoUpload, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.ShowId)

    <div class="row mb-3">
        <div class="col">
            <input type="submit" value="Create" class="btn btn-outline-secondary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.ckeditor.com/4.20.0/standard/ckeditor.js"></script>
    <script>CKEDITOR.replace('Premise');</script>
}
