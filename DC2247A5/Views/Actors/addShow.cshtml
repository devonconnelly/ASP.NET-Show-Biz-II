@model DC2247A5.Models.ShowAddFormViewModel

@{
    ViewBag.Title = "Add Show For";
}

<h2>@ViewBag.Title @Model.ActorName</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row mb-3">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Genre, Model.Genres, new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row mb-3">
        @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "col-form-label col-sm-2" })
        <div class="col-sm-10">
                <div class="card card-body bg-light">
                    @foreach (var actor in Model.Actors)
                    {
                        <div class="form-check">
                            <input type="checkbox"
                                   id="actor-@actor.Value"
                                   name="ActorIds"
                                   value="@actor.Value"
                                   class="form-check-input"
                                   @(Model.ActorName == actor.Text ? "checked" : "") />
                            <label class="form-check-label" for="actor-@actor.Value">@actor.Text</label>
                        </div>
                    }
                    @Html.ValidationMessageFor(model => model.Actors, "", new { @class = "text-danger" })
                </div>
        </div>
    </div>

    

    <div class="row mb-3">
        <div class="col-sm-10">
            <input type="submit" value="Create"  class="btn btn-outline-secondary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
